import RPi.GPIO as GPIO
import struct 
import os
import numpy as np

GPIO.setmode(GPIO.BCM)

#herein we will use the pigpio library to make our digital reads and writes faster inside the for loop
#first remember to install all the things as mentioned in the pigpio github page and 
#also start the pigpiod daemon as instructed in the raspberry pi helper forum

#now the following lines of code are required to start the pigpio process
#default host is 'localhost' and default port is 8888
pi = pigio.pi()              # use defaults
pi = pigpio.pi('mypi')       # specify host, default port
pi = pigpio.pi('mypi', 7777) # specify host and port and default port 

pi = pigpio.pi()             # exit script if no connection
if not pi.connected:
   exit()

pi.set_mode(17, pigpio.OUTPUT) # GPIO 14 as data output pin and board pin 6 is my ground

os.chdir('go to the folder your file is saved')

#mylist=[] #initially thought of storing the read values in a list but numpy array is fater
a=np.array([],dtype='int')


with open("data_bin9", "rb") as f:
    while True:
        byte = f.read(1)
        if not byte:
            break
        a=np.append(a,ord(byte))

length=len(a)


#print(a.astype('int')) #this will print the entire array as with the values as int

#now looping through the array and printing out the values in my data pin
for i in range(length):
    pi.write(14, a[i])    
    

#this is to stop the pigpio process
pi.stop()

GPIO.cleanup()
  
#print(struct.unpack('H',f.read(2))) #this was used to unpack the byte values which were stored using the struct library
